{"version":3,"sources":["component/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoList","state","element","items","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","handleClick","index","arr","splice","renderTodo","map","item","className","style","cursor","float","color","onClick","Fragment","onSubmit","this","htmlFor","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAEqBA,E,4MACjBC,MAAQ,CACJC,QAAS,GACTC,MAAO,I,EAGXC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAQH,EAAEE,OAAOE,S,EAInCC,aAAe,SAACL,GACZA,EAAEM,iBACF,EAAKL,SAAS,CACVJ,QAAS,GACTC,MAAM,GAAD,mBAAM,EAAKF,MAAME,OAAjB,CAAwB,CAACD,QAAS,EAAKD,MAAMC,c,EAG1DU,YAAc,SAACC,GACX,IAAMC,EAAM,EAAKb,MAAME,MACvBW,EAAIC,OAAOF,EAAO,GAClB,EAAKP,SAAS,CACVH,MAAOW,K,EAGfE,WAAa,WACT,OAAO,EAAKf,MAAME,MAAMc,KAAK,SAACC,EAAKL,GAC/B,OACI,qBAAKM,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,+BACKD,EAAKhB,QACN,mBAAGiB,UAAU,eAAeC,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAASC,QAAS,kBAAM,EAAKZ,YAAYC,YAJnGA,O,4CAY7C,WACI,OACI,eAAC,IAAMY,SAAP,WACI,sBAAKN,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,yBAIA,qBAAKA,UAAU,YAAf,SACI,sBAAMO,SAAWC,KAAKjB,aAAtB,SACI,sBAAKS,UAAU,kBAAf,UACI,uBAAOS,QAAQ,UAAUT,UAAU,2BAAnC,8BACA,uBACIU,KAAK,OACLV,UAAU,+BACVX,KAAK,UACLsB,SAAWH,KAAKvB,aAChBK,MAAQkB,KAAK1B,MAAMC,UAEvB,wBAAQ2B,KAAK,SAASV,UAAU,4BAAhC,qDAOfQ,KAAKX,oB,GAnEgBe,aCSvBC,MARf,WACE,OACE,qBAAKb,UAAU,YAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.628683a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ToDoList extends Component {\n    state = {\n        element: '',\n        items: []\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n        \n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            element: '',\n            items: [...this.state.items, {element: this.state.element}]\n        })\n    }\n    handleClick = (index) => {\n        const arr = this.state.items\n        arr.splice(index, 1)\n        this.setState({\n            items: arr\n        })\n    }\n    renderTodo = () => {\n        return this.state.items.map( (item,index) => {\n            return (\n                <div className=\"card mb-3\" key= {index}>\n                    <div className=\"card-body\">\n                        <h4>\n                            {item.element}\n                            <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={() => this.handleClick(index)}></i>\n                        </h4>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"card my-3\">\n                    <div className=\"card-header\">\n                        To-do Liste\n                    </div>\n\n                    <div className=\"card-body\">\n                        <form onSubmit={ this.handleSubmit } > \n                            <div className=\"form-group px-3\">\n                                <label htmlFor=\"element\" className=\"card-body my-0 pt-3 pb-1\">Chose à faire</label>\n                                <input \n                                    type=\"text\" \n                                    className=\"form-control form-control-lg\" \n                                    name=\"element\" \n                                    onChange={ this.handleChange } \n                                    value={ this.state.element }\n                                />\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\" >Ajouter une chose à faire!</button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n                \n                {this.renderTodo()}\n\n            </React.Fragment>\n        )\n    }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport ToDoList from './component/ToDoList.js'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}